{"version":3,"sources":["components/Section/Section.js","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/Contacts/Contacts.js","components/ContactsSearch/ContactsSearch.js","components/App.js","index.js","components/Contacts/Contacts.module.css","components/Section/Section.module.css","components/Form/Form.module.css"],"names":["Section","title","children","className","s","section","section__title","Form","onAddContact","useState","name","setName","number","setNumber","onChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","newId","uuidv4","id","type","placeholder","pattern","required","form__btn","ContactsItem","onDeleteContact","del__btn","onClick","Contacts","contactsArr","contacts__list","map","contacts__item","ContactsSearch","wrapper","Phonebook","contacts","setContacts","filter","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","contact","con","toLowerCase","length","alert","includes","contactId","text","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5f7aa1cc.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className={s.section__title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Form.module.css';\r\n\r\nexport default function Form({ onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const onChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const newId = uuidv4();\r\n    onAddContact({ name, number, id: newId });\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={onSubmit}>\r\n      <label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={onChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Number\"\r\n          value={number}\r\n          onChange={onChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className={s.form__btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from '../Contacts/Contacts.module.css';\r\n\r\nexport default function ContactsItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <>\r\n      <p>\r\n        {name}: {number}\r\n      </p>\r\n      <button\r\n        className={s.del__btn}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Contacts.module.css';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\n\r\nexport default function Contacts({ contactsArr, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.contacts__list}>\r\n      {contactsArr.map(({ id, name, number }) => (\r\n        <li key={id} className={s.contacts__item}>\r\n          <ContactsItem\r\n            id={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contactsArr: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from '../Contacts/Contacts.module.css';\r\n\r\nexport default function ContactsSearch({ value, onChange }) {\r\n  return (\r\n    <label className={s.wrapper}>\r\n      <input\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nContactsSearch.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport Section from './Section/Section';\nimport Form from './Form/Form';\nimport Contacts from './Contacts/Contacts';\nimport ContactsSearch from './ContactsSearch/ContactsSearch';\nimport s from './Contacts/Contacts.module.css';\n\nexport default function Phonebook() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const onAddContact = contact => {\n    const isContactExist = contacts.filter(\n      con => con.name.toLowerCase() === contact.name.toLowerCase(),\n    );\n    if (isContactExist.length === 0) {\n      setContacts([...contacts, contact]);\n    } else {\n      alert(`${contact.name} is already in contacts.`);\n    }\n  };\n\n  const filteredContactsArr = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter),\n    );\n  };\n\n  const onSearch = e => {\n    setFilter(e.currentTarget.value.toLowerCase());\n  };\n\n  const onDeleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form onAddContact={onAddContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <ContactsSearch value={filter} onChange={onSearch} />\n            <Contacts\n              contactsArr={filteredContactsArr()}\n              onDeleteContact={onDeleteContact}\n            />\n          </>\n        ) : (\n          <div className={s.wrapper}>\n            <p className={s.text}>No contacts yet</p>\n          </div>\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Contacts_wrapper__E6Lrw\",\"contacts__list\":\"Contacts_contacts__list__1f4d1\",\"contacts__item\":\"Contacts_contacts__item__3UF4a\",\"text\":\"Contacts_text__3Lre7\",\"del__btn\":\"Contacts_del__btn__WDmAV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__iCODf\",\"section__title\":\"Section_section__title__3Yn6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__337KO\",\"form__btn\":\"Form_form__btn__1arOt\"};"],"sourceRoot":""}